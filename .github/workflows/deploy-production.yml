name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: comic-ai-agent-470309
  GAR_LOCATION: asia-northeast1
  REPOSITORY: manga-service
  REGION: asia-northeast1

jobs:
  build-and-deploy:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

    # Backend Build and Deploy
    - name: Build and push backend image
      run: |
        docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/backend:$GITHUB_SHA \
                     -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/backend:latest \
                     ./backend
        docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/backend:$GITHUB_SHA
        docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/backend:latest

    - name: Deploy backend to Cloud Run
      id: deploy-backend
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: manga-backend-prod
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:${{ github.sha }}
        region: ${{ env.REGION }}
        flags: |
          --platform=managed
          --allow-unauthenticated
          --port=8000
          --cpu=2
          --memory=2Gi
          --min-instances=1
          --max-instances=50
          --concurrency=50
          --timeout=900
          --service-account=manga-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          --set-env-vars=ENV=production,FIREBASE_PROJECT_ID=${{ env.PROJECT_ID }}
          --set-secrets=SECRET_KEY=manga-secret-key:latest

    # Frontend Build and Deploy
    - name: Build and push frontend image
      run: |
        docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/frontend:$GITHUB_SHA \
                     -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/frontend:latest \
                     --build-arg NEXT_PUBLIC_API_URL=${{ steps.deploy-backend.outputs.url }} \
                     ./frontend
        docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/frontend:$GITHUB_SHA
        docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/frontend:latest

    - name: Deploy frontend to Cloud Run
      id: deploy-frontend
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: manga-frontend-prod
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:${{ github.sha }}
        region: ${{ env.REGION }}
        flags: |
          --platform=managed
          --allow-unauthenticated
          --port=3000
          --cpu=1
          --memory=512Mi
          --min-instances=0
          --max-instances=10
          --concurrency=80
          --timeout=300
          --service-account=manga-service-account@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          --set-env-vars=NODE_ENV=production,NEXT_PUBLIC_API_URL=${{ steps.deploy-backend.outputs.url }}

    # Output URLs
    - name: Show deployed URLs
      run: |
        echo "Backend URL: ${{ steps.deploy-backend.outputs.url }}"
        echo "Frontend URL: ${{ steps.deploy-frontend.outputs.url }}"