[tool:pytest]
# pytest configuration for AI Manga Generation Backend

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    --strict-markers
    --disable-warnings
    --tb=short
    --maxfail=10
    -v
    --durations=10
    --cov=app
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions  
    e2e: End-to-end tests for complete workflows
    performance: Performance and load testing
    security: Security and authentication testing
    slow: Tests that take longer to run
    ai_dependent: Tests that require AI services
    database_dependent: Tests that require database
    redis_dependent: Tests that require Redis
    network_dependent: Tests that require network access
    skip_ci: Tests to skip in CI environment
    flaky: Tests that are known to be flaky

# Asyncio configuration  
asyncio_mode = auto

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:aioredis.*
    ignore::UserWarning:sqlalchemy.*