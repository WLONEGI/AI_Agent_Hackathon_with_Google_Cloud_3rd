version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: manga_postgres
    environment:
      POSTGRES_USER: manga_user
      POSTGRES_PASSWORD: manga_password
      POSTGRES_DB: manga_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U manga_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: manga_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: manga_backend
    env_file:
      - .env  # Load from .env file
    environment:
      DATABASE_URL: postgresql+asyncpg://manga_user:manga_password@postgres:5432/manga_db
      REDIS_URL: redis://redis:6379/0
      ENV: development
      DEBUG: "true"
      LOG_LEVEL: DEBUG
      # Override container-specific settings
      DATABASE_POOL_SIZE: 10
      DATABASE_MAX_OVERFLOW: 5
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app  # Mount app directory for development
      - ./alembic:/app/alembic  # Mount migrations
      - ./credentials:/app/credentials:ro  # Mount credentials (read-only)
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data: